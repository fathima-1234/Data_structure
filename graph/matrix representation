def insertion(v):
    global node_count 
    if v in nodes:
        print(v,"it is already present in the graph")
    else:
        node_count = node_count + 1
        nodes.append(v)
        for n in graph:
            n.append(0)
        temp = []
        for i in range(node_count):
            temp.append(0)
        graph.append(temp)

def add_edge(v1,v2):
    if v1 not in nodes:
        print("node is not present in graph")
    elif v2 not in nodes:
        print("node is not present in graph")
    else:
        index1 = nodes.index(v1)
        index2 = nodes.index(v2)
        graph[index1][index2] = 1
        graph[index2][index1] = 1

def delete_Node(v):
    global node_count
    if v not in nodes:
        print("node is not present")
    else:
        index1 = nodes.index(v)
        node_count = node_count - 1
        nodes.remove(v)
        graph.pop(index1)
        for i in graph:
            i.pop(index1)

def delete_edge(v1,v2):
    if v1 not in nodes:
        print("v1 not in graph" )
    elif v2 not in nodes:
        print("v2 not in graph" )
    else:
        index1 = nodes.index(v1)
        index2 = nodes.index(v2)
        graph[index1][index2] = 0
        graph[index2][index1] = 0


def print_graph():
    for i in range(node_count):
        for j in range(node_count):
            print(format(graph[i][j]), end = " ")

        print()




        







nodes = []
graph = []
node_count = 0
print("graph before adding nodes")
print(nodes)
print(graph)
insertion(10)
insertion(20)
print("graph after adding nodes")
print(nodes)
print(graph)
# delete_Node(20)
add_edge(10,20)
delete_edge(10,20)
print_graph()
print(nodes)
