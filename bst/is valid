class TreeNode:
    def __init__(self, key):
        self.key = key
        self.left = None
        self.right = None

def is_valid_bst(root):
    def is_valid(node, min_val, max_val):
        if node is None:
            return True
        if node.key <= min_val or node.key >= max_val:
            return False
        return is_valid(node.left, min_val, node.key) and is_valid(node.right, node.key, max_val)

    return is_valid(root, float('-inf'), float('inf'))

# Example usage
root = TreeNode(10)
root.left = TreeNode(5)
root.right = TreeNode(15)
root.left.left = TreeNode(3)
root.left.right = TreeNode(8)
root.right.left = TreeNode(12)
root.right.right = TreeNode(20)

print(is_valid_bst(root))  # Should print True

# Insert an invalid node
root.left.right.right = TreeNode(7)
print(is_valid_bst(root))  # Should print False
