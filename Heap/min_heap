import heapq
class Min_heap:
    def __init__(self):
        self.min_heap = []

    def build_heap(self,num):
        self.heap = num[:]
        heapq.heapify(self.heap)
    def insert(self,num):
        heapq.heappush(self.heap,num)
    def remove(self,num):
        if num in self.heap:
            self.heap.remove(num)
            heapq.heapify(self.heap)
    def get_min(self):
        if self.heap:
            return self.heap[0]
    
    def print_heap(self):
        print(self.heap)


min_heap = Min_heap()
min_heap.build_heap([3, 1, 4, 1, 5, 9, 2, 6, 8, 7])
min_heap.insert(0)
min_heap.remove(1)
min_heap.print_heap()
print("Minimum element:", min_heap.get_min())